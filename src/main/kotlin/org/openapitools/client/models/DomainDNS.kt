/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import com.squareup.moshi.Json

/**
 *
 *
 * @param records the records returned by the lookup
 * @param domain the requested domain
 * @param dnsProvider the detected DNS provider for the requested domain
 * @param type the type of DNS record returned
 * @param recordsValid whether the returned records represent a valid configuration
 */

data class DomainDNS(

    /* the records returned by the lookup */
    @Json(name = "records")
    val records: kotlin.collections.List<kotlin.String>? = null,

    /* the requested domain */
    @Json(name = "domain")
    val domain: kotlin.String? = null,

    /* the detected DNS provider for the requested domain */
    @Json(name = "dns_provider")
    val dnsProvider: DomainDNS.DnsProvider? = null,

    /* the type of DNS record returned */
    @Json(name = "type")
    val type: DomainDNS.Type? = null,

    /* whether the returned records represent a valid configuration */
    @Json(name = "records_valid")
    val recordsValid: kotlin.Boolean? = null

) {

    /**
     * the detected DNS provider for the requested domain
     *
     * Values: unknown,godaddy,cloudflare,namecheap
     */
    enum class DnsProvider(val value: kotlin.String) {
        @Json(name = "unknown") unknown("unknown"),
        @Json(name = "godaddy") godaddy("godaddy"),
        @Json(name = "cloudflare") cloudflare("cloudflare"),
        @Json(name = "namecheap") namecheap("namecheap");
    }
    /**
     * the type of DNS record returned
     *
     * Values: a,cNAME,unknown
     */
    enum class Type(val value: kotlin.String) {
        @Json(name = "A") a("A"),
        @Json(name = "CNAME") cNAME("CNAME"),
        @Json(name = "unknown") unknown("unknown");
    }
}
